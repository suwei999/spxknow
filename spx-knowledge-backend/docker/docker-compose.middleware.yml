version: '3.8'

services:
  # ============================================
  # MySQL 数据库服务
  # ============================================
  mysql:
    image: mysql:5.7
    container_name: spx-knowledge-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-spx_knowledge}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      TZ: Asia/Shanghai
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - spx-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-password}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # MinIO 对象存储服务
  # ============================================
  minio:
    image: minio/minio:latest
    container_name: spx-knowledge-minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - spx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ============================================
  # Redis 缓存服务
  # ============================================
  redis:
    image: redis:6-alpine
    container_name: spx-knowledge-redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - spx-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # OpenSearch 搜索引擎服务
  # ============================================
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: spx-knowledge-opensearch
    restart: always
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "${OPENSEARCH_PORT:-9200}:9200"
      - "${OPENSEARCH_TRANSPORT_PORT:-9300}:9300"
    networks:
      - spx-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    # 注意: IK插件需要在容器启动后手动安装
    # 执行命令: bin/opensearch-plugin install -b https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v8.11.0/elasticsearch-analysis-ik-8.11.0.zip

  # ============================================
  # OpenSearch Dashboards (可选)
  # ============================================
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: spx-knowledge-opensearch-dashboards
    restart: always
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "${OPENSEARCH_DASHBOARDS_PORT:-5601}:5601"
    volumes:
      - opensearch_dashboards_data:/usr/share/opensearch-dashboards/data
    depends_on:
      - opensearch
    networks:
      - spx-network

networks:
  spx-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  opensearch_data:
    driver: local
  opensearch_dashboards_data:
    driver: local

